// Generated by view binder compiler. Do not edit!
package com.example.datasimulator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.datasimulator.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backToMainButton;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final MaterialButton clearDataButton;

  @NonNull
  public final TextView connectionStatus;

  @NonNull
  public final RecyclerView dataRecyclerView;

  @NonNull
  public final TextView emptyText;

  @NonNull
  public final TextView heartRateLabel;

  @NonNull
  public final TextView heartRateValue;

  @NonNull
  public final Button historyButton;

  @NonNull
  public final RecyclerView recentDataRecyclerView;

  @NonNull
  public final MaterialButton sendDataButton;

  @NonNull
  public final TextView subtitleText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final MaterialButton viewDataButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button backToMainButton,
      @NonNull LinearLayout buttonContainer, @NonNull MaterialButton clearDataButton,
      @NonNull TextView connectionStatus, @NonNull RecyclerView dataRecyclerView,
      @NonNull TextView emptyText, @NonNull TextView heartRateLabel,
      @NonNull TextView heartRateValue, @NonNull Button historyButton,
      @NonNull RecyclerView recentDataRecyclerView, @NonNull MaterialButton sendDataButton,
      @NonNull TextView subtitleText, @NonNull TextView titleText,
      @NonNull MaterialButton viewDataButton) {
    this.rootView = rootView;
    this.backToMainButton = backToMainButton;
    this.buttonContainer = buttonContainer;
    this.clearDataButton = clearDataButton;
    this.connectionStatus = connectionStatus;
    this.dataRecyclerView = dataRecyclerView;
    this.emptyText = emptyText;
    this.heartRateLabel = heartRateLabel;
    this.heartRateValue = heartRateValue;
    this.historyButton = historyButton;
    this.recentDataRecyclerView = recentDataRecyclerView;
    this.sendDataButton = sendDataButton;
    this.subtitleText = subtitleText;
    this.titleText = titleText;
    this.viewDataButton = viewDataButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backToMainButton;
      Button backToMainButton = ViewBindings.findChildViewById(rootView, id);
      if (backToMainButton == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.clearDataButton;
      MaterialButton clearDataButton = ViewBindings.findChildViewById(rootView, id);
      if (clearDataButton == null) {
        break missingId;
      }

      id = R.id.connectionStatus;
      TextView connectionStatus = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatus == null) {
        break missingId;
      }

      id = R.id.dataRecyclerView;
      RecyclerView dataRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (dataRecyclerView == null) {
        break missingId;
      }

      id = R.id.emptyText;
      TextView emptyText = ViewBindings.findChildViewById(rootView, id);
      if (emptyText == null) {
        break missingId;
      }

      id = R.id.heartRateLabel;
      TextView heartRateLabel = ViewBindings.findChildViewById(rootView, id);
      if (heartRateLabel == null) {
        break missingId;
      }

      id = R.id.heartRateValue;
      TextView heartRateValue = ViewBindings.findChildViewById(rootView, id);
      if (heartRateValue == null) {
        break missingId;
      }

      id = R.id.historyButton;
      Button historyButton = ViewBindings.findChildViewById(rootView, id);
      if (historyButton == null) {
        break missingId;
      }

      id = R.id.recentDataRecyclerView;
      RecyclerView recentDataRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recentDataRecyclerView == null) {
        break missingId;
      }

      id = R.id.sendDataButton;
      MaterialButton sendDataButton = ViewBindings.findChildViewById(rootView, id);
      if (sendDataButton == null) {
        break missingId;
      }

      id = R.id.subtitleText;
      TextView subtitleText = ViewBindings.findChildViewById(rootView, id);
      if (subtitleText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.viewDataButton;
      MaterialButton viewDataButton = ViewBindings.findChildViewById(rootView, id);
      if (viewDataButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, backToMainButton, buttonContainer,
          clearDataButton, connectionStatus, dataRecyclerView, emptyText, heartRateLabel,
          heartRateValue, historyButton, recentDataRecyclerView, sendDataButton, subtitleText,
          titleText, viewDataButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
